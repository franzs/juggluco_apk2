name: Daily APK Download and Release

on:
  schedule:
    - cron: '0 5 * * *'  # Runs daily at 5:00 UTC
  workflow_dispatch:     # Still allows manual runs

permissions:
  contents: write

jobs:
  download_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium

      - name: Install Chrome and Chromedriver
        uses: browser-actions/setup-chrome@v1

      - name: Run Python script to download APK
        run: |
          ./scripts/download_juggluco.py

      - name: Extract version from filename
        id: get_version
        run: |
          FILE=$(ls downloads/*.apk | head -n 1)
          echo "APK_FILE=$FILE" >> $GITHUB_ENV

          FILENAME=$(basename "$FILE")
          VERSION=$(echo "$FILENAME" | grep -oP '\d+-\d+-\d+' | sed 's/-/./g')
          VERSION_TAG="v$VERSION"
          echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV

      - name: Check if release already exists
        id: check_release
        run: |
          EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.get_version.outputs.version_tag }})
          if [ "$EXISTS" == "200" ]; then
            echo "Release already exists. Skipping."
            echo "SKIP_RELEASE=true" >> $GITHUB_ENV
          else
            echo "SKIP_RELEASE=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        if: env.SKIP_RELEASE == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION_TAG }}
          files: ${{ env.APK_FILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
